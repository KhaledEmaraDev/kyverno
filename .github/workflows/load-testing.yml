name: Load Tests

on:
  release:
    types: [published]
  pull_request:
    branches:
      - "main"
      - "release*"
  schedule:
    - cron: "27 0 * * 0"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  old-load-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        k8s-version: [v1.31.0]
    steps:
      - name: Print CPU specs
        run: cat /proc/cpuinfo
      - name: Checkout kyverno/kyverno
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Checkout kyverno/load-testing
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: kyverno/load-testing
          path: load-testing
      - name: Install Helm
        id: helm
        uses: azure/setup-helm@fe7b79cd5ee1e45176fcad797de68ecaf3ca4814 # v4.2.0
      - name: Create Kind cluster
        uses: helm/kind-action@ae94020eaf628e9b9b9f341a10cc0cdcf5c018fb # v1.11.0
        with:
          node_image: kindest/node:${{ matrix.k8s-version }}
          cluster_name: kind
          config: ./scripts/config/kind/default.yaml
      - name: Install Kyverno
        shell: bash
        run: |
          set -e
          export HELM=${{ steps.helm.outputs.helm-path }}
          export USE_CONFIG=default-with-profiling
          $HELM repo add kyverno https://kyverno.github.io/kyverno/
          $HELM repo update
          export INSTALL_VERSION=$($HELM search repo kyverno/kyverno -o json | jq -r '.[0].version')
          export EXPLICIT_INSTALL_SETTINGS='--set admissionController.replicas=1 --set admissionController.resources.requests.cpu=100m --set admissionController.resources.limits.cpu=1500m --set admissionController.resources.requests.memory=128Mi --set admissionController.resources.limits.memory=384Mi'
          make kind-install-kyverno-from-repo
      - name: Wait for kyverno ready
        uses: ./.github/actions/kyverno-wait-ready
      - name: Install K6
        shell: bash
        run: |
          set -e
          go install go.k6.io/xk6/cmd/xk6@latest
          $(go env GOPATH)/bin/xk6 build --with github.com/grafana/xk6-dashboard@latest
          mkdir -p $HOME/.local/bin && mv ./k6 $HOME/.local/bin
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Run load tests using K6
        shell: bash
        run: |
          set -e
          mkdir -p report
          KYVERNO_NODE_IP=$(kubectl get nodes -o jsonpath='{.items[?(@.metadata.labels.kubernetes\.io/hostname=="kind-control-plane")].status.addresses[?(@.type=="InternalIP")].address}')
          curl -s "http://$KYVERNO_NODE_IP:30950/debug/pprof/profile?seconds=90" > report/cpu.pprof &
          cd load-testing
          ./k6/run.sh k6/tests/kyverno-pss.js -e SCENARIO=average --out dashboard=export=load-report.html
          wait %1 || true
          mv load-report.html ../report
      - name: Extract P(95)
        id: extract-p95
        shell: bash
        run: |
          set -e
          echo "p95=$(grep http_req_duration load-testing/test-output.log | awk -F 'p\\(95\\)=' '{split($2,a,\"ms\"); print a[1]}')" >> $GITHUB_OUTPUT
          echo $GITHUB_OUTPUT
      - name: Debug failure
        if: failure()
        uses: ./.github/actions/kyverno-logs
